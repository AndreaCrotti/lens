{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Lenses, Folds, and Traversals","google":"pub-9028661600722510","body":"Overview\r\n--------\r\n\r\nThis package provides families of [lenses](https://github.com/ekmett/lens/blob/master/src/Control/Lens/Type.hs), [isomorphisms](https://github.com/ekmett/lens/blob/master/src/Control/Lens/Iso.hs), [folds](https://github.com/ekmett/lens/blob/master/src/Control/Lens/Fold.hs), [traversals](https://github.com/ekmett/lens/blob/master/src/Control/Lens/Traversal.hs), [getters](https://github.com/ekmett/lens/blob/master/src/Control/Lens/Getter.hs) and [setters](https://github.com/ekmett/lens/blob/master/src/Control/Lens/Setter.hs) for [Haskell](http://haskell.org/).\r\n\r\nExamples\r\n--------\r\n\r\nYou can let the library automatically derive lenses for fields of your data types\r\n\r\n```haskell\r\nimport Control.Lens\r\nimport Data.Set as Set\r\nimport Data.Set.Lens\r\nimport Data.Text.Lens\r\n\r\ndata Flag = Verbose | Help deriving (Eq,Ord,Show) \r\n\r\ndata Config a = Config \r\n  { _flags :: Set Flag\r\n  , _compiler :: a \r\n  } deriving (Show)\r\n\r\nmakeLenses ''Config\r\n\r\ncfg :: Config String\r\ncfg = Config Set.empty \"ghc\"\r\n```\r\n\r\nYou can then automatically access them and update them in a purely functional manner:\r\n\r\n```haskell\r\nghci> cfg^.flags.contains Verbose\r\nFalse\r\n```\r\n\r\nor imperatively:\r\n\r\n```haskell\r\ntoggleVerbosity :: MonadState Config m => m ()\r\ntoggleVerbosity = flags.contains Verbose %~ not\r\n```\r\n\r\nand updates can even change the type of the container:\r\n\r\n```haskell\r\ncompiler %~ view packed :: Config String -> Config Text\r\n```\r\n\r\nResources\r\n---------\r\n\r\n* [Documentation is available locally](https://ekmett.github.com/lens/lens) or on [Hackage](](https://hackage.haskell.org/package/lens)\r\n\r\n* An overview of the these types can be found on the [lens wiki]([Tutorial](https://github.com/ekmett/lens/wiki/Tutorial) under [Tutorial](https://github.com/ekmett/lens/wiki/Tutorial).\r\n\r\n* There is also a fully operational, but simple game of [Pong](https://github.com/ekmett/lens/blob/master/examples/Pong.hs) in the [examples/](https://github.com/ekmett/lens/blob/master/examples/) folder.\r\n\r\n","name":"Lens"}